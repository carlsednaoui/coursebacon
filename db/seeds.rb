Course.create(:title => 'CS101 - BUILDING A SEARCH ENGINE', :url => 'http://www.udacity.com/overview/Course/cs101', :offered_by => 'Udacity', :main_topic => 'Python', :description => 'This class will give you an introduction to computing. In seven weeks, you will build your own search engine complete with a web crawler and way of ranking popular pages. You will understand some of the key concepts in computer science, and learn how to write your own computer programs. No previous background in programming is expected.', :user_id => 1)

Course.create(:title => 'CS212 - DESIGN OF COMPUTER PROGRAMS', :url => 'http://www.udacity.com/overview/Course/cs212', :offered_by => 'Udacity', :main_topic => 'Intermediate Programming', :description => 'The key to progressing from a novice programmer to an expert is mindful practice. In this class you will practice going from a problem description to a solution, using a series of assignments. With each problem you will learn new concepts, patterns, and methods that will expand your ability and help move you along the path from novice towards expertise.', :user_id => 1)

Course.create(:title => 'CS253 - WEB APPLICATION ENGINEERING', :url => 'http://www.udacity.com/overview/Course/cs253', :offered_by => 'Udacity', :main_topic => 'Web Applications', :description => 'Web applications have the power to provide useful services to millions of people worldwide. In this class, you will learn how to build your own blog application starting from the basics of how the web works and how to set up a web application and process user input, to how to use databases, manage user accounts, interact with other web services, and make your application scale to support large numbers of users.', :user_id => 1)

Course.create(:title => 'CS262 - PROGRAMMING LANGUAGES', :url => 'http://www.udacity.com/overview/Course/cs262', :offered_by => 'Udacity', :main_topic => 'JavaScript', :description => 'This class will give you an introduction to fundamentals of programming languages. In seven weeks, you will build your own simple web browser complete with the ability to parse and understand HTML and JavaScript. You will learn key concepts such as how to specify and process valid strings, sentences and program structures. Then, you will design and build an interpreter - a program that simulates other programs.', :user_id => 1)

Course.create(:title => 'CS373 - PROGRAMMING A ROBOTIC CAR', :url => 'http://www.udacity.com/overview/Course/cs373', :offered_by => 'Udacity', :main_topic => 'AI', :description => 'This class, taught by one of the foremost experts in AI, will teach you basic methods in Artificial Intelligence, including: probabilistic inference, computer vision, machine learning, and planning, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars. You will get a chance to visit, via video, the leading research labs in the field, and meet the scientists and engineers who are building self-driving cars at Stanford and Google. Prerequisites: The instructor will assume solid knowledge of programming, all programming will be in Python. Knowledge of probability and linear algebra will be helpful.', :user_id => 1)

Course.create(:title => 'CS387 - APPLIED CRYPTOGRAPHY', :url => 'http://www.udacity.com/overview/Course/cs387', :offered_by => 'Udacity', :main_topic => 'Cryptography', :description => "Cryptography is about 'secret writing'. In this class, we will introduce the mathematical foundations of cryptography and build programs to perform encryption. We will see how to use cryptography to solve important problem such as how to authenticate users, secure websites, and do computation without exposing up your data. We will also look at the things that can go wrong when cryptography is misused or implemented badly.", :user_id => 1)

Course.create(:title => 'Model Thinking', :url => 'https://www.coursera.org/modelthinking/auth/welcome', :offered_by => 'Coursera', :main_topic => 'Data Models', :description => "Models help us to better organize information - to make sense of that fire hose or hairball of data (choose your metaphor) available on the Internet. Models improve our abilities to make accurate forecasts. They help us make better decisions and adopt more effective strategies. They even can improve our ability to design institutions and procedure. In this class, I present a starter kit of models: I start with models of tipping points. I move on to cover models explain the wisdom of crowds, models that show why some countries are rich and some are poor, and models that help unpack the strategic decisions of firm and politicians. For each model, I present a short, easily digestible overview lecture. Then, I'll dig deeper. I'll go into the technical details of the model. Those technical lectures won't require calculus but be prepared for some algebra. For all the lectures, I'll offer some questions and we'll have quizzes and even a final exam. If you decide to do the deep dive, and take all the quizzes and the exam, you'll receive a certificate of completion. If you just decide to follow along for the introductory lectures to gain some exposure that's fine too. It's all free. And it's all here to help make you a better thinker!", :user_id => 1)

Course.create(:title => 'Software as a Service', :url => 'https://www.coursera.org/saas/class', :offered_by => 'Coursera', :main_topic => 'SAAS', :description => "This course teaches the engineering fundamentals for long-lived software using the highly-productive Agile development method for Software as a Service (SaaS) using Ruby on Rails. Agile developers continuously refine and refactor a working but incomplete prototype until the customer is happy with result, with the customer offering continuous feedback. Agile emphasizes user stories to validate customer requirements; test-driven development to reduce mistakes; biweekly iterations of new software releases; and velocity to measure progress. We will introduce all these elements of the Agile development cycle, and go through one iteration by adding features to a simple app and deploying it on the cloud using tools like Github, Cucumber, RSpec, SimpleCov, Pivotal Tracker, and Heroku.", :user_id => 1)

Course.create(:title => 'Computer Vision', :url => 'http://www.vision-class.org/', :offered_by => 'Coursera', :main_topic => 'Algorithms', :description => "Computer vision seeks to develop algorithms that replicate one of the most amazing capabilities of the human brain - inferring properties of the external world purely by means of the light reflected from various objects to the eyes. We can determine how far away these objects are, how they are oriented with respect to us, and in relationship to various other objects. We reliably guess their colors and textures, and we can recognize them - this is a chair, this is my dog Fido, this is a picture of Bill Clinton smiling. We can segment out regions of space corresponding to particular objects and track them over time, such as a basketball player weaving through the court.", :user_id => 1)

Course.create(:title => 'Natural Language Processing', :url => 'https://www.coursera.org/nlp/auth/welcome', :offered_by => 'Coursera', :main_topic => 'Language Processing', :description => "The course covers a broad range of topics in natural language processing, including word and sentence tokenization, text classification and sentiment analysis, spelling correction, information extraction, parsing, meaning extraction, and question answering, We will also introduce the underlying theory from probability, statistics, and machine learning that are crucial for the field, and cover fundamental algorithms like n-gram language modeling, naive bayes and maxent classifiers, sequence models like Hidden Markov Models, probabilistic dependency and constituent parsing, and vector-space models of meaning.", :user_id => 1)

Course.create(:title => 'Game Theory', :url => 'https://www.coursera.org/gametheory/auth/welcome', :offered_by => 'Coursera', :main_topic => 'Game Theory', :description => "Popularized by movies such as 'A Beautiful Mind', game theory is the mathematical modeling of strategic interaction among rational (and irrational) agents. Beyond what we call 'games' in common language, such as chess, poker, soccer, etc., it includes the modeling of conflict among nations, political campaigns, competition among firms, and trading behavior in markets such as the NYSE. How could you begin to model eBay, Google keyword auctions, and peer to peer file-sharing networks, without accounting for the incentives of the people using them? The course will provide the basics: representing games and strategies, the extensive form (which computer scientists call game trees), Bayesian games (modeling things like auctions), repeated and stochastic games, and more. We'll include a variety of examples including classic games and a few applications.", :user_id => 1)

Course.create(:title => 'Probabilistic Graphical Models', :url => 'https://www.coursera.org/pgm/auth/welcome', :offered_by => 'Coursera', :main_topic => 'PGM', :description => "In this class, you will learn the basics of the PGM representation and how to construct them, using both human knowledge and machine learning techniques; you will also learn algorithms for using a PGM to reach conclusions about the world from limited and noisy evidence, and for making good decisions under uncertainty. The class covers both the theoretical underpinnings of the PGM framework and practical skills needed to apply these techniques to new problems. ", :user_id => 1)

Course.create(:title => 'Cryptography', :url => 'https://www.coursera.org/crypto/auth/welcome', :offered_by => 'Coursera', :main_topic => 'Cryptography', :description => "Cryptography is an indispensable tool for protecting information in computer systems. This course explains the inner workings of cryptographic primitives and how to correctly use them. Students will learn how to reason about the security of cryptographic constructions and how to apply this knowledge to real-world applications. The course begins with a detailed discussion of how two parties who have a shared secret key can communicate securely when a powerful adversary eavesdrops and tampers with traffic. We will examine many deployed protocols and analyze mistakes in existing systems. The second half of the course discusses public-key techniques that let two or more parties generate a shared secret key. We will cover the relevant number theory and discuss public-key encryption, digital signatures, and authentication protocols. Towards the end of the course we will cover more advanced topics such as zero-knowledge, distributed protocols such as secure auctions, and a number of privacy mechanisms. Throughout the course students will be exposed to many exciting open problems in the field.", :user_id => 1)

Course.create(:title => 'Design and Analysis of Algorithms', :url => 'https://www.coursera.org/algo/auth/welcome', :offered_by => 'Coursera', :main_topic => 'Algorithms', :description => "In this course you will learn several fundamental principles of algorithm design. You'll learn the divide-and-conquer design paradigm, with applications to fast sorting, searching, and multiplication. You'll learn several blazingly fast primitives for computing on graphs, such as how to compute connectivity information and shortest paths. Finally, we'll study how allowing the computer to 'flip coins' can lead to elegant and practical algorithms and data structures. Learn the answers to questions such as: How do data structures like heaps, hash tables, bloom filters, and balanced search trees actually work, anyway? How come QuickSort runs so fast? What can graph algorithms tell us about the structure of the Web and social networks? Did my 3rd-grade teacher explain only a suboptimal algorithm for multiplying two numbers?", :user_id => 1)

Course.create(:title => 'Introduction to Computer Science and Programming', :url => 'http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00sc-introduction-to-computer-science-and-programming-spring-2011/', :offered_by => 'MIT', :main_topic => 'Python', :description => "This subject is aimed at students with little or no programming experience. It aims to provide students with an understanding of the role computation can play in solving problems. It also aims to help students, regardless of their major, to feel justifiably confident of their ability to write small programs that allow them to accomplish useful goals. The class will use the Python programming language.", :user_id => 1)

Course.create(:title => 'Introduction to Electrical Engineering and Computer Science I', :url => 'http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-01sc-introduction-to-electrical-engineering-and-computer-science-i-spring-2011/', :offered_by => 'MIT', :main_topic => 'Electrical Engineering', :description => "This course provides an integrated introduction to electrical engineering and computer science, taught using substantial laboratory experiments with mobile robots. Our primary goal is for you to learn to appreciate and use the fundamental design principles of modularity and abstraction in a variety of contexts from electrical engineering and computer science. Our second goal is to show you that making mathematical models of real systems can help in the design and analysis of those systems. Finally, we have the more typical goals of teaching exciting and important basic material from electrical engineering and computer science, including modern software engineering, linear systems analysis, electronic circuits, and decision-making.", :user_id => 1)

Course.create(:title => 'Performance Engineering of Software Systems', :url => 'http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-172-performance-engineering-of-software-systems-fall-2010/', :offered_by => 'MIT', :main_topic => 'High Performance Softwares', :description => "Modern computing platforms provide unprecedented amounts of raw computational power. But significant complexity comes along with this power, to the point that making useful computations exploit even a fraction of the potential of the computing platform is a substantial challenge. Indeed, obtaining good performance requires a comprehensive understanding of all layers of the underlying platform, deep insight into the computation at hand, and the ingenuity and creativity required to obtain an effective mapping of the computation onto the machine. The reward for mastering these sophisticated and challenging topics is the ability to make computations that can process large amount of data orders of magnitude more quickly and efficiently and to obtain results that are unavailable with standard practice.", :user_id => 1)

Course.create(:title => 'Fundamentals of Entrepreneurship', :url => 'https://generalassemb.ly/start/fundamentals-of-entrepreneurship', :offered_by => 'General Assembly', :main_topic => 'Entrepreneurship', :description => "Start making: A path to turn your ideas into a company people love. Presentations by: Alexis Ohanian (from Reddit), Jack Groetzinger (from SeatGeek), Rachel Derkits-Gelman, Jake Schwartz (from General Assembly) and much more.", :user_id => 1)

Course.create(:title => 'Circuits & Electronics', :url => 'https://6002x.mitx.mit.edu/', :offered_by => 'MIT', :main_topic => 'Circuits', :description => "6.002x (Circuits and Electronics) is designed to serve as a first course in an undergraduate electrical engineering (EE), or electrical engineering and computer science (EECS) curriculum. At MIT, 6.002 is in the core of department subjects required for all undergraduates in EECS. The course introduces engineering in the context of the lumped circuit abstraction. Topics covered include: resistive elements and networks; independent and dependent sources; switches and MOS transistors; digital abstraction; amplifiers; energy storage elements; dynamics of first- and second-order networks; design in the time and frequency domains; and analog and digital circuits and applications. Design and lab exercises are also significant components of the course. You should expect to spend approximately 10 hours per week on the course.", :user_id => 1)

Course.create(:title => 'CodeYear', :url => 'http://codeyear.com/', :offered_by => 'Codecademy', :main_topic => 'Intro to Programming', :description => "Sign up for Code Year to start receiving a new interactive programming lesson every Monday. You'll be building apps and websites before you know it! Past lessons are available online.", :user_id => 1)

Course.create(:title => 'Learn JavaScript with Codecademy', :url => 'http://www.codecademy.com/courses/type/all/lang/javascript', :offered_by => 'Codecademy', :main_topic => 'JavaScript', :description => "JavaScript is a programming language that grew out of a need to add interactivity to web sites within the browser. It has since evolved into an incredibly versatile language that is used for both client-side (within the browser) and server-side (code that serves web pages to users) applications.", :user_id => 1)

Course.create(:title => 'Google Code University', :url => 'http://code.google.com/edu/', :offered_by => 'Google', :main_topic => 'Programming', :description => "Google Code University (GCU) does not require registration and materials are free to use.", :user_id => 1)

Course.create(:title => 'Google Python Class', :url => 'http://code.google.com/edu/languages/google-python-class/', :offered_by => 'Google', :main_topic => 'Python', :description => "This is a free class for people with a little bit of programming experience who want to learn Python. The class includes written materials, lecture videos, and lots of code exercises to practice Python coding. These materials are used within Google to introduce Python to people who have just a little programming experience. The first exercises work on basic Python concepts like strings and lists, building up to the later exercises which are full programs dealing with text files, processes, and http connections. The class is geared for people who have a little bit of programming experience in some language, enough to know what a 'variable' or 'if statement' is. Beyond that, you do not need to be an expert programmer to use this material.", :user_id => 1)

Course.create(:title => 'Learning from data', :url => 'http://work.caltech.edu/telecourse.html', :offered_by => 'Caltech', :main_topic => 'Machine Learning', :description => "This is an introductory course on machine learning that covers the basic theory, algorithms, and applications. Machine learning (ML) enables computational systems to adaptively improve their performance with experience accumulated from the observed data. ML techniques are widely applied in engineering, science, finance, and commerce to build systems for which we do not have full mathematical specification (and that covers a lot of systems). The course balances theory and practice, and covers the mathematical as well as the heuristic aspects. ", :user_id => 1)

Course.create(:title => 'Getting Traction', :url => 'http://tractionbook.com/', :offered_by => 'Yegg', :main_topic => 'Startup', :description => "View videos of successful entrepreneurs and learn the techniques they used to gain serious market traction.", :user_id => 1)

Tutorial.create(:title => 'Twitter Sentiment Analysis Using Python', :url => 'http://www.laurentluce.com/posts/twitter-sentiment-analysis-using-python-and-nltk/', :offered_by => 'Laurent Luce', :main_topic => 'Sentiment Analysis', :description => "This post describes the implementation of sentiment analysis of tweets using Python and the natural language toolkit NLTK. The post also describes the internals of NLTK related to this implementation.", :user_id => 1)

Tutorial.create(:title => 'Email Infrastucture Setup Guide', :url => 'http://iafonov.github.com/blog/hardcore-email-infrastructure-setup.html', :offered_by => 'Igor Afonov', :main_topic => 'Email', :description => "This article will help you ensure that your 'good' emails will not get into spam folder. If you are sending junk emails with viagra advertisement sooner or later you'll get in trouble anyway. In this article you will get a brief overview of things you can do to increase the quality of email subsystem of your application.", :user_id => 1)

Tutorial.create(:title => 'RailsCasts', :url => 'http://railscasts.com/', :offered_by => 'Ryan Bates', :main_topic => 'Ruby on Rails', :description => "The authority when it comes to Rails tutorials. Make sure to check out all of his great videos!", :user_id => 1)

Tutorial.create(:title => 'Ruby Tutorials', :url => 'http://rubysource.com/category/ruby-tutorials/', :offered_by => 'Ruby Source', :main_topic => 'Ruby', :description => "A wide variety of useful Ruby tutorials.", :user_id => 1)

Tutorial.create(:title => 'Rails Tutorials', :url => 'http://rubysource.com/category/rails-tutorials/', :offered_by => 'Ruby Source', :main_topic => 'Ruby on Rails', :description => "A wide variety of useful Ruby on Rails tutorials.", :user_id => 1)

Tutorial.create(:title => 'Nginx Tutorials', :url => 'http://agentzh.org/misc/nginx/agentzh-nginx-tutorials-enuk.html', :offered_by => 'agentzh', :main_topic => 'Nginx', :description => "One principle that I've been trying to follow in these tutorials is to use small and concise configure examples to validate the concepts and principles that are being explained. I hope this can help the reader to build the good habit of not accepting others' viewpoints or statements without testing them. This style may have something to do with my QA background.", :user_id => 1)

Tutorial.create(:title => 'Startup, This is How Design Works', :url => 'http://startupsthisishowdesignworks.com/', :offered_by => 'Wells Riley', :main_topic => 'Design', :description => "Companies like Apple are making design impossible for startups to ignore. Startups like Path, Airbnb, Square, and Massive Health have design at the core of their business, and they're doing phenomenal work. But what is 'design' actually? Is it a logo? A Wordpress theme? An innovative UI?", :user_id => 1)

Tutorial.create(:title => 'Get Things Done (for hackers)', :url => 'http://gtdfh.branchable.com/', :offered_by => 'Branchable', :main_topic => 'Productivity', :description => "David Allen's 'Getting Things Done', or GTD for short, is a popular, powerful system for managing one's life. If you have trouble dealing with your e-mail inbox, or feel you're drowning under a flood of inputs and information, or just don't seem to have time to do everything you think you should be doing, or others want you to do, then GTD may be a good thing for you to consider. This book explains how I, a computer geek, have implemented it in my own life. It is aimed at everyone whose lives include a lot of computer use, and who know how to use their computers.", :user_id => 1)

Book.create(:title => 'Git Community Book', :url => 'http://book.git-scm.com/index.html', :main_topic => 'Git', :description => "Welcome to the Git Community Book. This book has been built by dozens of people in the Git community, and is meant to help you learn how to use Git as quickly and easily as possible.", :user_id => 1)

Book.create(:title => 'Command Line Crash Course', :url => 'http://learncodethehardway.org/cli/book/', :main_topic => 'Command Line', :description => "I wrote this book really quickly as a way to bootstrap students for my other books. Many students don't know how to use the basics of the command line interface, and it was getting in the way of their learning. This book is designed to be something they can complete in about a day to a week and then get enough skill at the command line to graduate to other books. This book isn't a book about master wizardry system administration. It's just a quick introduction to get newbies going.", :user_id => 1)

Tutorial.create(:title => 'Blogging Platform For Hackers', :url => 'http://bionicspirit.com/blog/2012/01/05/blogging-for-hackers.html', :offered_by => 'Bionic Spirit', :main_topic => 'Ruby on Rails', :description => "I'm showing you how to: host your own static website on Heroku's free plan; use Google's App Engine as a CDN, for better responsiveness; keep Heroku's free dyno alive, by using a GAE cron job; have a very responsive, scalable and secure blog, with ultimate; control and simplicity, for zero bucks per month;", :user_id => 1)

Book.create(:title => 'MBA Mondays', :url => 'http://mba-mondays.pandamian.com/tableofcontents/', :main_topic => 'Business School', :description => "I'd like to announce a new series here at AVC. I'm calling it 'MBA Mondays'. Every Monday I'll write a post that is about a topic I learned in business school. I'll keep it dead simple. And I'll try to connect it to some real world experience. Fred Wilson is the principal VC behind Union Square Ventures and avc.com. He is responsible for investments in Twitter, Tumblr, Foursquare, and Etsy, and spends his time in New York with his wife Gotham Girl and two daughters Jessica and Emily. Read", :user_id => 1)

Book.create(:title => 'Essential JavaScript Design Patterns', :url => 'http://addyosmani.com/resources/essentialjsdesignpatterns/book/', :main_topic => 'JavaScript', :description => "Design patterns are reusable solutions to commonly occurring problems in software design. They are both exciting and a fascinating topic to explore in any programming language. One reason for this is that they help us build upon the combined experience of many developers that came before us and ensure we structure our code in an optimized way, meeting the needs of problems we're attempting to solve. Design patterns also provide us a common vocabulary to describe solutions. This can be significantly simpler than describing syntax and semantics when we're attempting to convey a way of structuring a solution in code form to others. In this book we will explore applying both classical and modern design patterns to the JavaScript programming language.", :user_id => 1)

Tutorial.create(:title => 'JavaScript language advanced Tips and Tricks', :url => 'http://code.google.com/p/jslibs/wiki/JavascriptTips', :offered_by => 'Google', :main_topic => 'JavaScript', :description => "Advanced JS tips and tricks. These tips and tricks are not related to any web browser or any Document Object Model (DOM), they are only general purpose tips and tricks for the JavaScript language. Some of these tricks are using a latest version of JavaScript language (v1.8) and cannot run with the Microsoft Implementation of JavaScript (v1.5).", :user_id => 1)

Tutorial.create(:title => 'Learning Advanced JavaScript', :url => 'http://ejohn.org/apps/learn/', :offered_by => 'ejohn.org', :main_topic => 'JavaScript', :description => "Learned advanced JS with this interaction tutorial. It also includes an in-browser JS editor.", :user_id => 1)

Book.create(:title => 'The JavaScript Guide', :url => 'https://developer.mozilla.org/en/JavaScript/Guide', :main_topic => 'JavaScript', :description => "JavaScript is a cross-platform, object-based scripting language. This guide explains everything you need to know about using JavaScript. Getting started with JavaScript is easy: all you need is a modern Web browser. This guide includes some JavaScript features which are only currently available in the latest versions of Firefox (and other Gecko powered browsers), so using the most recent version of Firefox is recommended.", :user_id => 1)

Course.create(:title => 'JavaScript Video Series', :url => 'http://yuiblog.com/crockford/', :offered_by => 'Douglas Crockford', :main_topic => 'JavaScript', :description => "Douglas Crockford is Yahoo!'s JavaScript architect and a member of the committee designing future versions of the world's most popular programming language. Starting in 2010 and through 2011, Douglas delivered his acclaimed series of lectures on the history of JavaScript, its features, and its use.", :user_id => 1)

Book.create(:title => 'Eloquent JavaScript', :url => 'http://eloquentjavascript.net/contents.html', :main_topic => 'JavaScript', :description => "When personal computers were first introduced, most of them came equipped with a simple programming language, usually a variant of BASIC. Interacting with the computer was closely integrated with this language, and thus every computer-user, whether he wanted to or not, would get a taste of it. Now that computers have become plentiful and cheap, typical users don't get much further than clicking things with a mouse. For most people, this works very well. But for those of us with a natural inclination towards technological tinkering, the removal of programming from every-day computer use presents something of a barrier. Fortunately, as an effect of developments in the World Wide Web, it so happens that every computer equipped with a modern web-browser also has an environment for programming JavaScript. In today's spirit of not bothering the user with technical details, it is kept well hidden, but a web-page can make it accessible, and use it as a platform for learning to program. That is what this (hyper-)book tries to do.", :user_id => 1)

Course.create(:title => 'Human-Computer Interaction', :url => 'https://www.coursera.org/course/hci', :offered_by => 'Coursera', :main_topic => 'UI/ UX', :description => "In this course, you will learn how to design technologies that bring people joy, rather than frustration. You'll learn several techniques for rapidly prototyping and evaluating multiple interface alternatives - and why rapid prototyping and comparative evaluation are essential to excellent interaction design. You'll learn how to conduct fieldwork with people to help you get design ideas. How to make paper prototypes and low-fidelity mock-ups that are interactive -- and how to use these designs to get feedback from other stakeholders like your teammates, clients, and users.", :user_id => 1)

Course.create(:title => 'Introduction to Logic', :url => 'https://www.coursera.org/course/intrologic', :offered_by => 'Coursera', :main_topic => 'Logic', :description => "Logic is one of the oldest intellectual disciplines in human history. It dates back to the times of Aristotle; it has been studied through the centuries; and it is still a subject of active investigation today. This course is a basic introduction to Logic. It shows how to formalize information in form of logical sentences. It shows how to reason systematically with this information to produce all logical conclusions and only logical conclusions. And it examines logic technology and its applications - in mathematics, science, engineering, business, law, and so forth. The course differs from other introductory courses in Logic in two important ways. First of all, it teaches a novel theory of logic that improves accessibility while preserving rigor. Second, the material is laced with interactive demonstrations and exercises that suggest the many practical applications of the field.", :user_id => 1)

Tutorial.create(:title => 'Reddit, Stumbleupon, Del.icio.us and Hacker News Algorithms Exposed', :url => 'http://www.seomoz.org/blog/reddit-stumbleupon-delicious-and-hacker-news-algorithms-exposed', :offered_by => 'SEOMoz', :main_topic => 'Algorithms', :description => "", :user_id => 1)

Course.create(:title => 'Automata', :url => 'https://www.coursera.org/course/automata', :offered_by => 'Coursera', :main_topic => 'Automata', :description => "This subject is not just for those planning to enter the field of complexity theory, although it is a good place to start if that is your goal. Rather, the course will emphasize those aspects of the theory that people really use in practice. Finite automata, regular expressions, and context-free grammars are ideas that have stood the test of time. They are essential tools for compilers. But more importantly, they are used in many systems that require input that is less general than a full programming language yet more complex than 'push this button.' The concepts of undecidable problems and intractable problems serve a different purpose. Undecidable problems are those for which no computer solution can ever exist, while intractable problems are those for which there is strong evidence that, although they can be solved by a computer, they cannot be solved sufficiently fast that the solution is truly useful in practice. Understanding this theory, and in particular being able to prove that a problem you are facing belongs to one of these classes, allows you to justify taking another approach - simplifying the problem or writing code to approximate the solution, for example. ", :user_id => 1)

Course.create(:title => 'CS 101', :url => 'https://www.coursera.org/course/cs101', :offered_by => 'Coursera', :main_topic => 'Intro to Programming', :description => "CS101 teaches the essential ideas of Computer Science for a zero-prior-experience audience. Computers can appear very complicated, but in reality, computers work within just a few, simple patterns. CS101 demystifies and brings those patterns to life, which is useful for anyone using computers today. In CS101, students play and experiment with short bits of 'computer code' to bring to life to the power and limitations of computers. Everything works within the browser, so there is no extra software to download or install. CS101 also provides a general background on computers today: what is a computer, what is hardware, what is software, what is the internet. No previous experience is required other than the ability to use a web browser.", :user_id => 1)

Course.create(:title => 'Compilers', :url => 'https://www.coursera.org/course/compilers', :offered_by => 'Coursera', :main_topic => 'Compilers', :description => "This course will discuss the major ideas used today in the implementation of programming language compilers, including lexical analysis, parsing, syntax-directed translation, abstract syntax trees, types and type checking, intermediate languages, dataflow analysis, program optimization, code generation, and runtime systems. As a result, you will learn how a program written in a high-level language designed for humans is systematically translated into a program written in low-level assembly more suited to machines. Along the way we will also touch on how programming languages are designed, programming language semantics, and why there are so many different kinds of programming languages.", :user_id => 1)

Course.create(:title => 'Machine Learning', :url => 'https://www.coursera.org/course/ml', :offered_by => 'Coursera', :main_topic => 'Machine Learning', :description => "Machine learning is the science of getting computers to act without being explicitly programmed. In the past decade, machine learning has given us self-driving cars, practical speech recognition, effective web search, and a vastly improved understanding of the human genome. Machine learning is so pervasive today that you probably use it dozens of times a day without knowing it. Many researchers also think it is the best way to make progress towards human-level AI. In this class, you will learn about the most effective machine learning techniques, and gain practice implementing them and getting them to work for yourself. More importantly, you'll learn about not only the theoretical underpinnings of learning, but also gain the practical know-how needed to quickly and powerfully apply these techniques to new problems. Finally, you'll learn about some of Silicon Valley's best practices in innovation as it pertains to machine learning and AI.", :user_id => 1)

Course.create(:title => 'Scalling Rails', :url => 'http://railslab.newrelic.com/scaling-rails', :offered_by => 'New Relic', :main_topic => 'Ruby on Rails', :description => "Welcome to the Scaling Rails Screencast Series produced by Gregg Pollack and supported by New Relic. In the next few weeks we're going to bring you 13 educational videos, teaching you just about everything you need to know to create a Rails application that can scale", :user_id => 1)

Tutorial.create(:title => 'How Not To Sort By Average Rating', :url => 'http://evanmiller.org/how-not-to-sort-by-average-rating.html', :offered_by => 'Evan Miller', :main_topic => 'Algorithms', :description => "PROBLEM: You are a web programmer. You have users. Your users rate stuff on your site. You want to put the highest-rated stuff at the top and lowest-rated at the bottom. You need some sort of 'score' to sort by. SOLUTION: Read tutorial", :user_id => 1)

Course.create(:title => 'HTML Fundamentals', :url => 'http://www.codecademy.com/courses/html-one-o-one', :offered_by => 'Codecademy', :main_topic => 'HTML', :description => "This course will introduce you to HTML and its amazing use in our everyday internet life.", :user_id => 1)

Tutorial.create(:title => 'Intantly Beautiful GitHub Project Pages', :url => 'https://github.com/blog/1081-instantly-beautiful-project-pages', :offered_by => 'Github', :main_topic => 'GitHub', :description => "Ever pushed a new project to GitHub and wished you had the time or talent to make a beautiful page for it? Stop wishing. We're proud to present the new GitHub Page Generator.", :user_id => 1)

Tutorial.create(:title => 'Client-Side Error Logging With Google Analytics', :url => 'http://www.thetaboard.com/blog/client-side-error-logging-with-google-analytics?r=378', :offered_by => 'ThetaBoard', :main_topic => 'Analytics', :description => "There was a post on Hacker News yesterday encouraging developers to log client-side errors. Doing so will allow you to identify errors your visitors see but just aren't telling you about. There are several options that will allow you to track these exception.", :user_id => 1)

Book.create(:title => 'Guide to Programming in Clojure for Beginners', :url => 'http://blackstag.com/blog.posting?id=5', :main_topic => 'Clojure', :description => "Clojure is a rich language, loaded with features. So much so, that one could literally find themselves writing a book, even when only intending to write a blog post! So while reading this guide, it's best not to expect coverage on many of the super cool features that Clojure has to offer as I've only been able to give consideration to what I believe is necessary for a beginner to get started.", :user_id => 1)

Book.create(:title => 'Clojure - Functional Programming for the JVM', :url => 'http://java.ociweb.com/mark/clojure/article.html', :main_topic => 'Clojure', :description => "The goal of this article (slash book) is to provide a fairly comprehensive introduction to the Clojure programming language. A large number of features are covered, each in a fairly brief manner. Feel free to skip around to the sections of most interest. The section names in the table of contents are hyperlinks to make this easier when reading on-line.", :user_id => 1)

Tutorial.create(:title => 'Try Ruby', :url => 'http://tryruby.org/levels/1/challenges/0', :offered_by => 'CodeSchool', :main_topic => 'Ruby', :description => "Learn Ruby with this interactive online tutorial. Highly recommended!", :user_id => 1)


Course.create(:title => 'MySQL Database for Beginners', :url => 'http://www.udemy.com/mysql-database-for-beginners2/', :offered_by => 'Udemy', :main_topic => 'MySQL', :description => "Go from Beginner to Pro in MySQL Databases with Bucky Roberts.", :user_id => 1)

Course.create(:title => '21 Critical Lessons for Entrepreneurs', :url => 'http://www.udemy.com/21-golden-rules-for-entrepreneurs/', :offered_by => 'Udemy', :main_topic => 'Entrepreneurship', :description => "Whether you aspire to start your own business or are a serial entrepreneur, this course offers real-world insights that can be put into action. Jason Nazar, CEO of Docstoc, shares important lessons learned over his career, first by working with new companies then on to starting his own successful business. From the early stages of vetting your idea and raising money to hiring the best team and continuing to grow your business, this course offers poignant insights from a real entrepreneur that can be applied to any business.", :user_id => 1)

Course.create(:title => "An Entrepreneur's Checklist", :url => 'http://www.udemy.com/an-entrepreneurs-checklist/', :offered_by => 'Udemy', :main_topic => 'Entrepreneurship', :description => "No matter what business vertical you're entering, serial entrepreneur Steve Blank outlines a few points of necessary focus for the emerging business start-up, including market opportunity, market regulations and distribution, competitors and complimentors, and technology breakthroughs. He notes that the customer is not always the same thing as the payer, and that this bifurcation is creating interesting new business models.", :user_id => 1)

Tutorial.create(:title => 'Learn to Program the Arduino', :url => 'http://www.linuxjournal.com/content/learning-program-arduino#', :offered_by => 'Linux Journal', :main_topic => 'Arduino', :description => "This article should acquaint you with basic Arduino programming and show you how to write programs that interact with objects in the real world. (A mandatory disclaimer: the last time I really studied electronics was way back in high school, so this article focuses more on the programming aspects, rather than the electronic side of things.)", :user_id => 1)

Book.create(:title => 'Ruby Hacking Guide', :url => 'http://rhg.rubyforge.org/', :main_topic => 'Ruby', :description => "This is the home page of the project to translate into English the Ruby Hacking Guide. The RHG is a book that explains how the ruby interpreter (the official C implementation of the Ruby language) works internally. To fully understand it, you need a good knowledge of C and Ruby. The original book includes a Ruby tutorial (chapter 1), but it has not been translated yet, and we think there are more important chapters to translate first. So if you have not done it yet, you should read a book like the Pickaxe first.", :user_id => 1)

Book.create(:title => 'Learn Ruby The Hard Way', :url => 'http://ruby.learncodethehardway.org/book/', :main_topic => 'Ruby', :description => "Welcome to Learn Ruby the hard way. This is a translation of 'Learn Python The Hard Way/ to teach total beginners Ruby. It's in the same style, and the content is nearly the same, but it will teach you Ruby. ", :user_id => 1)

Book.create(:title => 'Ruby on Rails Tutorial (Rails 3.2)', :url => 'http://ruby.railstutorial.org/ruby-on-rails-tutorial-book?version=3.2', :main_topic => 'Ruby on Rails', :description => "Michael Hartl is the author of the Ruby on Rails Tutorial, the leading introduction to web development with Ruby on Rails. His prior experience includes writing and developing RailsSpace, an extremely obsolete Rails tutorial book, and developing Insoshi, a once-popular and now-obsolete social networking platform in Ruby on Rails. In 2011, Michael received a Ruby Hero Award for his contributions to the Ruby community. He is a graduate of Harvard College, has a Ph.D. in Physics from Caltech, and is an alumnus of the Y Combinator entrepreneur program.", :user_id => 1)

Book.create(:title => 'The Bastard Book of Ruby', :url => 'http://ruby.bastardsbook.com/toc/', :main_topic => 'Ruby', :description => "The Bastards Book of Ruby is an introduction to programming and its practical uses for journalists, researchers, scientists, analysts, and anyone else whose job is to seek out, make sense from, and show the hard-to-find data. This does not require being 'good at computers', having a background in programming, or the desire (yet) to be a full-fledged hacker/developer. It just takes an eagerness to be challenged.", :user_id => 1)

Course.create(:title => 'iPad Course', :url => 'http://www.cmu.edu/homepage/computing/2012/winter/ipad-course.shtml', :offered_by => 'Carnegie Mellon University', :main_topic => 'iPad', :description => "Devices in hand, a group of students lucky enough to get into one of Carnegie Mellon University's newest classes are already hard at work. They are learning the art of iPad programming.", :user_id => 1)

Book.create(:title => 'Ruby on Rails Guides', :url => 'http://guides.rubyonrails.org/', :main_topic => 'Ruby on Rails', :description => "These are the new guides for Rails. These guides are designed to make you immediately productive with Rails, and to help you understand how all of the pieces fit together.", :user_id => 1)

Tutorial.create(:title => 'Vim University', :url => 'http://vimuniversity.com/', :offered_by => 'Vim University', :main_topic => 'Vim', :description => "A collection of useful Vim resources.", :user_id => 1)

Tutorial.create(:title => 'Learn Vim Progressively', :url => 'http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/', :offered_by => 'Yannesposito', :main_topic => 'Vim', :description => "Want to learn vim (the best text editor known to human kind) the fastest way possible. I suggest you a way. Start by learning the minimal to survive, then integrate slowly all tricks.", :user_id => 1)

Book.create(:title => "A Beginner's Guide to HTML and CSS", :url => 'http://learn.shayhowe.com/html-css/terminology-syntax-intro', :main_topic => 'HTML/ CSS', :description => "A Beginner's Guide to HTML & CSS is a simple and comprehensive guide dedicated to helping beginners learn HTML and CSS. Outlining the fundamentals, this guide works through all common elements of front-end design and development.", :user_id => 1)

Tutorial.create(:title => 'Ruby in 100 Minutes', :url => 'http://tutorials.jumpstartlab.com/projects/ruby_in_100_minutes.html', :offered_by => 'JumpStart Lab', :main_topic => 'Ruby', :description => "Ruby was written to make the programmer's job easy and not care if the computer's job is hard. In this brief introduction we'll look at the key language features you need to get started.", :user_id => 1)

Tutorial.create(:title => 'Creating a chat room using Parse.com', :url => 'http://attila.tumblr.com/post/21180235691/ios-tutorial-creating-a-chat-room-using-parse-com', :offered_by => 'David Mendels', :main_topic => 'iOS', :description => "Parse.com has been out of beta for a few weeks now, and I have been using this service for a few months, while they were still polishing the tool - and the API. I do regard this kind of service as the next step in app evolution: for the example that is interesting us today, if you've ever created your own php-Ajax-whatever enabled server and tried to bind a client to it, you certainly remember the pain. Enters Parse, which is the best invention since sliced bread.", :user_id => 1)

Tutorial.create(:title => 'Using Backbone Views With Rails jQuery-ujs', :url => 'http://reefpoints.dockyard.com/javascript/2012/04/16/using-backbone-views-with-rails-jquery-ujs.html', :offered_by => 'Reefpoints', :main_topic => 'Ruby on Rails', :description => "Maybe they've worked on improving some client side code with Backbone recently, and maybe they're trying to do things the Backbone way but don't know how to tie that together with existing Rails views. Here's a quick example of how Backbone views can listen for jquery-ujs custom events.", :user_id => 1)

Tutorial.create(:title => 'User Authentication with Rails and Backbone.js', :url => 'http://42floors.com/blog/posts/user-authentication-with-rails-and-backbone-js', :offered_by => '42 Floors', :main_topic => 'Ruby on Rails', :description => "Backbone.js is a small framework for developing web apps. Since there are no guiding conventions it can sometimes be difficult for the beginner to understand what is going on. The early contributors have different ideas of how things should be done. The community is still young, but over time sources for beginners will grow.", :user_id => 1)

Tutorial.create(:title => 'How to Learn Haskell', :url => 'http://acm.wustl.edu/functional/haskell.php', :offered_by => 'WUSTL', :main_topic => 'Haskell', :description => "So you want learn Haskell, and somehow or another you've ended up at this page. Good! This isn't really a tutorial though. Maybe you could call it a meta-tutorial. Our goal is to give you a better idea of the big picture when it comes to learning Haskell.", :user_id => 1)

Tutorial.create(:title => 'Git Immersion', :url => 'http://gitimmersion.com/index.html', :offered_by => 'Git Immersion', :main_topic => 'Git', :description => "Git is a powerful, sophisticated system for distributed version control. Gaining an understanding of its features opens to developers a new and liberating approach to source code management. The surest path to mastering Git is to immerse oneself in its utilities and operations, to experience it first-hand.", :user_id => 1)

Tutorial.create(:title => 'Ruby Class Tutorial', :url => 'http://juixe.com/techknow/index.php/2007/01/22/ruby-class-tutorial/', :offered_by => 'Juixe', :main_topic => 'Ruby', :description => "Classes and interfaces are the primary building blocks of a typical Java application. Classes are the blue prints used to create objects in a running system. In contrast to Java, Ruby's building blocks are classes, modules, and mixins. In this post we will take a tour of classes in Ruby.", :user_id => 1)

Tutorial.create(:title => 'Ruby Class Tutorial', :url => 'http://juixe.com/techknow/index.php/2007/01/22/ruby-class-tutorial/', :offered_by => 'juixe', :main_topic => 'Ruby', :description => 'Classes and interfaces are the primary building blocks of a typical Java application. Classes are the blue prints used to create objects in a running system. This tutorial is especially useful if you know Java.', :user_id => 1)

Tutorial.create(:title => 'Ruby Mixin Tutorial', :url => 'http://juixe.com/techknow/index.php/2006/06/15/mixins-in-ruby/', :offered_by => 'juixe', :main_topic => 'Ruby', :description => 'In Java you just have classes (both abstract and concrete) and interfaces. The Ruby language provides classes, modules, and a mix of both. In this post I want to dive into mixins in Ruby.', :user_id => 1)

Tutorial.create(:title => 'Bash Prompt - A How To Guide', :url => 'http://tldp.org/HOWTO/Bash-Prompt-HOWTO/index.html', :offered_by => 'tldp', :main_topic => 'Bash', :description => 'Creating and controlling terminal and xterm prompts is discussed, including incorporating standard escape sequences to give username, current working directory, time, etc. Further suggestions are made on how to modify xterm title bars, use external functions to provide prompt information, and how to use ANSI colours.', :user_id => 1)

Tutorial.create(:title => 'CSS Sprites', :url => 'http://coding.smashingmagazine.com/2012/04/11/css-sprites-revisited/', :offered_by => 'smashingmagazine', :main_topic => 'CSS', :description => "The CSS sprite has not truly found its way into the everyday toolkit of the common Web developer. While the theory behind CSS sprites is easy enough and its advantages are clear, they still prove to be too bothersome to implement, especially when time is short and deadlines are looming. Barriers exist to be breached, though, and we're not going to let a couple of tiny bumps in the road spoil the greater perks of the CSS sprite.", :user_id => 1)

Tutorial.create(:title => 'Create A jQuery Plugin with Grunt & QUnit', :url => 'http://javascriptplayground.com/blog/2012/04/a-jquery-plugin-with-grunt-qunit', :offered_by => 'javascriptplayground', :main_topic => 'JavaScript', :description => 'Today I want to talk through how I would go about writing a simple jQuery plugin. The plugin itself is very basic but I will show you how to use Grunt to make the job much easier and how to test a jQuery plugin with QUnit.', :user_id => 1)

Tutorial.create(:title => 'Git - the simple guide', :url => 'http://rogerdudler.github.com/git-guide/', :offered_by => 'Roger Dudler', :main_topic => 'Git', :description => 'As the title implies, a simply guide to using Git :)', :user_id => 1)

Tutorial.create(:title => 'How I Collect Passwords', :url => 'http://xato.net/passwords/how-i-collect-passwords', :offered_by => 'xato', :main_topic => 'Scraping', :description => 'Some of you out there know that I have been collecting passwords for quite some time. Since 1998 to be exact. Originally I did it just to have big wordlists for password cracking, then I started gathering them for research on my Perfect Passwords book, finally it became like a big ball of string where you just do it because it makes no sense to stop now. My list currently contains about 6 million unique username/password combinations (not counting those from public lists from Gawker, RockYou, and others). So I thought that some people might be interested in how I collect these passwords. Note that all of these passwords have already been made public and can easily be found by anyone. There are no passwords on my list that have not already been made public. Also note that so far I have never shared this list with anyone.', :user_id => 1)

Tutorial.create(:title => 'Beginning Node.js', :url => 'http://javascriptplayground.com/blog/2012/04/beginning-node-js-express-tutorial', :offered_by => 'javascriptplayground', :main_topic => 'Node.js', :description => 'Node.js has taken the development community by storm in the last 12 months. It offers JavaScript on the server, meaning an entire application can be coded in JavaScript. In the first of many Node tutorials, I show how to install Node, use its package manager, NPM and do a traditional Hello World example. I then look at Express, a popular framework for building applications on top of Node.', :user_id => 1)

Tutorial.create(:title => 'Sublime Text 2 Tips and Tricks', :url => 'http://net.tutsplus.com/tutorials/tools-and-tips/sublime-text-2-tips-and-tricks/', :offered_by => 'TutsPlus', :main_topic => 'Sublime Text', :description => 'Sublime Text 2 is one of the fastest and most incredible code editors to be released in a long time. With a community and plugin ecosystem as passionate as this, you need to check it out.', :user_id => 1)

Tutorial.create(:title => 'Postgres Guide', :url => 'http://postgresguide.com/', :offered_by => 'postgresguide', :main_topic => 'Postgres', :description => "We here are very big fans of Postgres as a database and believe in many cases it is the best database for the job. For many though working with and maintaining Postgres is a steep learning curve, though it doesn't have to be. Postgres guide is designed as a guide for beginners and experienced users to find specific tips and explore tools available within Postgres.", :user_id => 1)

Tutorial.create(:title => 'Write a simple interpreter in JavaScript', :url => 'http://www.codeproject.com/Articles/345888/How-to-write-a-simple-interpreter-in-JavaScript', :offered_by => 'codeproject', :main_topic => 'JavaScript', :description => 'Writing an interpreter or a compiler is one of the most educational tasks in programming because you can become familiarized with the details of the code interpretation and evaluation process. You can obtain much deeper knowledge of what sorts of things are going on behind the scenes and gain some insights into the decisions behind language design.', :user_id => 1)

Tutorial.create(:title => 'Exploring Backbone', :url => 'http://javascriptplayground.com/blog/2012/04/backbone-js-tutorial-1', :offered_by => 'javascriptplayground', :main_topic => 'Backbone.js', :description => 'Backbone.js is a framework that lets us structure our applications using a pattern similar to MVC (technically Backbone is not pure MVC as the C stands for -Collection-). However, Backbone is a powerful system to use when creating apps that are beyond very basic. When passing and manipulating a lot of data, you should consider using something like Backbone. Since launching this blog I have had a lot of people ask me about Backbone. Although there are a lot of very good resources out there, I have struggled to get to grips with it myself and from the requests received I can assume a lot of others have too. So, I sat down to create a sample application with Backbone, and in this tutorial - which will span at least 3 parts - we will create a very simplified shopping cart application, with Backbone. As always the source will be on Github and is linked to at the end of this post.', :user_id => 1)

Tutorial.create(:title => 'Domain Name System for Beginners', :url => 'http://needforair.com/blog/2012/04/22/dns-redirections/', :offered_by => 'needforair', :main_topic => 'DNS', :description => 'If you build a website, you will want your own domain name, which means you will need to manage your Domain Name System (DNS). While there is nothing very complicated here, the info is scattered across the Internet, so I decided to write a cheat sheet-like tutorial which will hopefully save you some time!', :user_id => 1)

Book.create(:title => 'The Little Book on CoffeeScript', :url => 'http://arcturo.github.com/library/coffeescript/', :main_topic => 'CoffeeScript', :description => "CoffeeScript is a little language that compiles down to JavaScript. The syntax is inspired by Ruby and Python, and implements many features from those two languages. This book is designed to help you learn CoffeeScript, understand best practices and start building awesome client side applications. The book is little, only five chapters, but that's rather apt as CoffeeScript is a little language too.", :user_id => 1)

Tutorial.create(:title => "VIM Adventures - Play to Learn VIM", :url => 'http://vim-adventures.com/', :offered_by => 'vim-adventures', :main_topic => 'Vim', :description => "VIM Adventures is an online game based on VIM's keyboard shortcuts. It's the Zelda meets text editing game. So come have some fun and learn some VIM!", :user_id => 1)

Tutorial.create(:title => 'Polygonal Map Generation for Games', :url => 'http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation/', :offered_by => 'stanford', :main_topic => 'Algorithms', :description => "I wanted to generate interesting game maps that weren't constrained to be realistic, and I wanted to try some techniques I hadn't tried before. I usually make tile maps but this time I decided to make polygonal maps. Instead of 1,000,000 tiles, what could I do with 1,000 polygons? I think the distinct player-recognizable areas might be useful for gameplay: locations of towns, places to quest, territory to conquer or settle, pathfinding waypoints, difficulty zones, etc. Once I have the polygons I can rasterize it back to tiles (or voxels), but I wanted to first generate the structure.", :user_id => 1)

Tutorial.create(:title => 'Get Started with Twilio SMS', :url => 'http://www.twilio.com/blog/2012/04/get-started-with-twilio-sms-receiving-incoming-sms-quickstart.html', :offered_by => 'Twilio', :main_topic => 'Twilio', :description => 'Watch the first in a series of screencast walkthrough for Twilio SMS capabilities in the SMS Quickstart', :user_id => 1)


#Course.create(:title => '', :url => '', :offered_by => '', :main_topic => '', :description => "", :user_id => 1)
#Tutorial.create(:title => '', :url => '', :offered_by => '', :main_topic => '', :description => "", :user_id => 1)
#Book.create(:title => '', :url => '', :main_topic => '', :description => "", :user_id => 1)
